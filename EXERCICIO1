package estudos;

public class ListaDupla<e> {
	No<e> cabeca;
	int tamanho;

	public void adcionarInicio(e valor) {
		No<e> novoElemento = new No<>(valor);
		if (cabeca == null) {
			cabeca = novoElemento;
			tamanho++;

		} else {
			novoElemento.proximo = cabeca;
			cabeca.anterior = novoElemento;
			cabeca = novoElemento;
			tamanho++;

		}

	}

	public void adcionarFim(e valor) {

		No<e> novo = new No<e>(valor);
		if (cabeca == null) {
			cabeca = novo;
			tamanho++;
		} else {
			No<e> aux = cabeca;
			while (aux.proximo != null) {
				aux = aux.proximo;

			}
			novo.anterior = aux;
			aux.proximo = novo;
			tamanho++;
		}

	}

	public void imprimir() {
		No<e> aux = cabeca;

		while (aux != null) {
			System.out.print(aux.valor + "(ant:" + (aux.anterior != null ? aux.anterior.valor : "null") + ") -> ");
			aux = aux.proximo;
		}
		System.out.println("null");
	}

	public void imprimirContrario() {

		No<e> aux = cabeca;

		while (aux.proximo != null) {
			aux = aux.proximo;
		}

		while (aux != null) {

			System.out
					.print(" <- " + aux.valor + " (ant: " + (aux.anterior != null ? aux.anterior.valor : "null") + ")");
			aux = aux.anterior;
		}

	}

	public boolean contem(e valor) {
		No<e> aux = cabeca;

		while (aux != null) {

			if (aux.valor.equals(valor)) {
				System.out.println("Valor contido na lista");
				return true;
			}
			aux = aux.proximo;
		}
		System.out.println("Valor não contido na lista");
		return false;
	}

	public void removerInicio() {

		if (cabeca == null) {
			System.out.println("A lista já esta vazia!!!");
		} else if (cabeca.proximo == null) {

			cabeca = null;
			System.out.println("Valor apagado a lista ficou vazia");
			tamanho --;
		} else {

			cabeca = cabeca.proximo;
			cabeca.anterior = null;
			tamanho --;
		}
	}

	public void removerFim() {
		if (cabeca == null) {
			return;
		}
		if (cabeca.proximo == null) {
			cabeca = null;
			tamanho --;
			return;
		}
		No<e> aux = cabeca;
		while (aux.proximo != null) {
			aux = aux.proximo;
		}
		aux = aux.anterior;
		aux.proximo = null;
		tamanho --;
	}

	public void inserirEmPosicao(int posicao, e valor) {

		if (posicao < 0 || posicao > tamanho) {
			System.out.println("Posição inválida: " + posicao + ". A lista tem tamanho " + tamanho + ".");
			return;
		}

		if (posicao == 0) {
			adcionarInicio(valor);
		}

		if (posicao == tamanho) {
			adcionarFim(valor);
			return;
		}

		No<e> aux = cabeca;
		for (int i = 0; i < posicao; i++) {
			aux = aux.proximo;
		}

		No<e> noAnterior = aux.anterior;

		No<e> novoElemento = new No<>(valor);

		novoElemento.proximo = aux;
		novoElemento.anterior = noAnterior;

		noAnterior.proximo = novoElemento;
		aux.anterior = novoElemento;

		tamanho++;
	}

	public void removerIndice(int posicao) {
		if (posicao < 0 || posicao > tamanho) {
			System.out.println("Posição inválida: " + posicao + ". A lista tem tamanho " + tamanho + ".");
			return;
		}
		if (posicao == 0) {
			removerInicio();
			return;
		}
		if (posicao == tamanho - 1) {

			removerFim();
			return;
		}
		No<e> posicaoLista = cabeca;
		for(int i = 0; i < posicao; i++) {
			posicaoLista = posicaoLista.proximo;
		}
		
		No<e> posicaoAnterior = posicaoLista.anterior;
		No<e> posicaoProximo = posicaoLista.proximo;
		
		posicaoAnterior.proximo  = posicaoProximo;
		posicaoProximo.anterior = posicaoAnterior ;
		tamanho--;
	}

	public static void main(String[] args) {

		ListaDupla<Integer> lista = new ListaDupla<>();

		lista.adcionarFim(231);
		lista.adcionarInicio(871);
		lista.adcionarInicio(654);

		
		
		System.out.println("");
		
		System.out.println("");
		lista.inserirEmPosicao(1, 709);
		lista.removerIndice(2);
		lista.imprimir();
		
		System.out.println("");
		
		lista.imprimirContrario();
		System.out.println("");
		lista.contem(2312);

	}
}
